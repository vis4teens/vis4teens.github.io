{"version":3,"file":"js/39.614664b0.js","mappings":"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","sources":["webpack://octopusmap/./src/views/CorrelationMatrixView.vue","webpack://octopusmap/./src/views/CorrelationMatrixView.vue?dec3"],"sourcesContent":["<template>\n  <div class=\"correlation-matrix-container\">\n    <div class=\"header-section\">\n      <h1>Correlation Matrix</h1>\n    </div>\n\n    <div class=\"controls-section\">\n      <div class=\"matrix-selector\">\n        <h3>Select Matrix Data</h3>\n        <div class=\"selector-grid\">\n          <div class=\"selector-item\">\n            <label>X-axis Category (Rows):</label>\n            <select v-model=\"selectedXCategory\" @change=\"onXCategoryChange\" class=\"category-select\">\n              <option value=\"\">Please select...</option>\n              <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\n                {{ category }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"selector-item\">\n            <label>Y-axis Category (Columns):</label>\n            <select v-model=\"selectedYCategory\" @change=\"onYCategoryChange\" class=\"category-select\">\n              <option value=\"\">Please select...</option>\n              <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\n                {{ category }}\n              </option>\n            </select>\n          </div>\n        </div>\n        \n        <div class=\"validation-section\" v-if=\"selectedXCategory && selectedYCategory\">\n          <div v-if=\"selectedXCategory === selectedYCategory\" class=\"warning\">\n            ⚠️ Please select two different categories\n          </div>\n          <div v-else-if=\"canGenerateMatrix\" class=\"generate-section\">\n            <button @click=\"generateMatrix\" class=\"generate-btn\" :disabled=\"loading\">\n              {{ loading ? 'Generating...' : 'Generate Correlation Matrix' }}\n            </button>\n          </div>\n        </div>\n        \n        \n      </div>\n    </div>\n\n    <div class=\"matrix-display\" v-if=\"currentMatrix\">\n\n      <div class=\"matrix-controls\">\n        <div class=\"display-options\">\n          <label>\n            <input type=\"checkbox\" v-model=\"showHeatmap\" />\n            Heatmap Display\n          </label>\n          <label>\n            <input type=\"checkbox\" v-model=\"showValues\" />\n            Show Values\n          </label>\n        </div>\n        \n        <div class=\"zoom-controls\">\n          <label>Zoom Level:</label>\n          <input type=\"range\" v-model=\"zoomLevel\" min=\"0.5\" max=\"2.0\" step=\"0.1\" />\n          <span>{{ Math.round(zoomLevel * 100) }}%</span>\n        </div>\n      </div>\n\n      <div class=\"matrix-wrapper\">\n        <div class=\"matrix-zoom-container\" :style=\"{ \n          '--zoom-factor': zoomLevel,\n          fontSize: (12 * zoomLevel) + 'px'\n        }\">\n                     <table class=\"matrix-table\">\n           <thead>\n             <!-- Secondary header row (only when needed on X-axis) -->\n             <tr v-if=\"needsSecondaryHeader && secondaryHeaderData && isSecondaryHeaderOnXAxis\">\n               <th class=\"corner-cell secondary-corner\"></th>\n               <th \n                 v-for=\"group in secondaryHeaderData\" \n                 :key=\"group.name\"\n                 class=\"secondary-header\"\n                 :colspan=\"group.span\"\n                 :title=\"group.name\"\n               >\n                 {{ group.name }}\n               </th>\n               <th class=\"sum-header secondary-corner\"> </th>\n             </tr>\n             <!-- Main header row -->\n             <tr>\n               <th class=\"corner-cell\" :rowspan=\"needsSecondaryHeader && isSecondaryHeaderOnXAxis ? 2 : 1\"></th>\n               <!-- When secondary header is displayed on Y-axis, add an empty column to correspond to row grouping column -->\n               <th \n                 v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis\"\n                 class=\"col-header\"\n                 style=\"background-color: #e9ecef;\"\n               >\n               </th>\n               <th \n                 v-for=\"col in currentMatrix.columns\" \n                 :key=\"col\"\n                 class=\"col-header\"\n                 :title=\"col\"\n               >\n                 <div class=\"header-text\">{{ col }}</div>\n               </th>\n               <th class=\"sum-header\"> </th>\n             </tr>\n           </thead>\n          <tbody>\n            <tr \n              v-for=\"(row, rowIndex) in currentMatrix.index\" \n              :key=\"row\"\n              class=\"matrix-row\"\n            >\n              <!-- When secondary header is displayed on Y-axis, add grouping information before row title -->\n              <th \n                v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis && isNewGroupStart(rowIndex)\"\n                class=\"row-group-header\"\n                :rowspan=\"getRowGroup(rowIndex).span\"\n                :title=\"getRowGroup(rowIndex).name\"\n              >\n                {{ getRowGroup(rowIndex).name }}\n              </th>\n              <th class=\"row-header\" :title=\"row\">\n                {{ truncateText(row, 25) }}\n              </th>\n              <td \n                v-for=\"(col, colIndex) in currentMatrix.columns\"\n                :key=\"col\"\n                class=\"matrix-cell\"\n                :class=\"{ 'with-heatmap': showHeatmap }\"\n                :style=\"getCellStyle(currentMatrix.data[rowIndex][colIndex])\"\n                :title=\"`${row} - ${col}: ${currentMatrix.data[rowIndex][colIndex]}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ currentMatrix.data[rowIndex][colIndex] }}\n                </span>\n              </td>\n              <td \n                class=\"sum-cell row-sum\"\n                :style=\"getSumCellStyle(getRowSum(rowIndex), 'row')\"\n                :title=\"`${row} - Row Sum: ${getRowSum(rowIndex)}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ getRowSum(rowIndex) }}\n                </span>\n              </td>\n            </tr>\n            <!-- Column sum row -->\n            <tr class=\"sum-row\">\n              <th class=\"sum-header\"> </th>\n              <!-- When secondary header is displayed on Y-axis, add an empty column to correspond to row grouping column -->\n              <td \n                v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis\"\n                class=\"sum-cell\"\n                style=\"background-color: #e9ecef;\"\n              >\n              </td>\n              <td \n                v-for=\"(col, colIndex) in currentMatrix.columns\"\n                :key=\"col\"\n                class=\"sum-cell col-sum\"\n                :style=\"getSumCellStyle(getColumnSum(colIndex), 'column')\"\n                :title=\"`${col} - Column Sum: ${getColumnSum(colIndex)}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ getColumnSum(colIndex) }}\n                </span>\n              </td>\n              <td>\n              </td>\n            </tr>\n          </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Legend -->\n      <div class=\"legend\" v-if=\"showHeatmap\">\n        <h4>Legend</h4>\n        <div class=\"legend-scale\">\n          <div class=\"legend-item\" v-for=\"(item, index) in legendItems\" :key=\"index\">\n            <div class=\"legend-color\" :style=\"{ backgroundColor: item.color }\"></div>\n            <span>{{ item.label }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Statistics -->\n      <div class=\"statistics\">\n        <h4>Statistics</h4>\n        <div class=\"stats-grid\">\n          <div class=\"stat-item\">\n            <label>Total:</label>\n            <span>{{ matrixStats.total }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Maximum:</label>\n            <span>{{ matrixStats.max }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Minimum:</label>\n            <span>{{ matrixStats.min }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Average:</label>\n            <span>{{ matrixStats.average.toFixed(2) }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"no-data\" v-else-if=\"!loading\">\n      <p>Please select two categories to generate correlation matrix</p>\n    </div>\n\n    <div class=\"loading\" v-if=\"loading\">\n      <p>Generating matrix...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CorrelationMatrixView',\n  data() {\n    return {\n      availableMatrices: [],\n      selectedXCategory: '',\n      selectedYCategory: '',\n      currentMatrix: null,\n      loading: false,\n      showHeatmap: true,\n      showValues: true,\n      zoomLevel: 1.0,\n      // Manual column grouping - specify column range merging\n      manualColumnGroups: {\n        // Example: column grouping when X-axis is Visualization types\n        'Visualization types': {\n          'statistical chart': { start: 0, end: 8 },      // Columns 1-9\n          'scientific visualization': { start: 9, end: 12 }, // Columns 10-13\n          'diagram': { start: 13, end: 17 },              // Columns 14-18\n          'map': { start: 18, end: 21 },                  // Columns 19-22\n          'network/graph': { start: 22, end: 22 }         // Column 23\n        },\n        // Example: column grouping when X-axis is Theoretical underpinnings\n        'Theoretical underpinnings': {\n          'learning theory': { start: 0, end: 47 },       // Columns 1-48\n          'cognitive theory': { start: 48, end: 56 },     // Columns 49-57\n          'design theory': { start: 57, end: 62 }         // Columns 58-63\n        }\n      },\n      // Fixed category options\n      categories: [\n        'Research areas',\n        'Subjects', \n        'Country',\n        'Education goals',\n        'Visualization forms',\n        'Tool types',\n        'Teaching environment',\n        'Teaching mode',\n        'Non-lecturing activities',\n        'Collaboration',\n        'Evaluation metrics',\n        'Other tested variables',\n        'Visualization types',\n        'Theoretical underpinnings'\n      ]\n    }\n  },\n  \n    computed: {\n    canGenerateMatrix() {\n      return this.selectedXCategory && this.selectedYCategory && this.selectedXCategory !== this.selectedYCategory;\n    },\n    \n    // Check if secondary header is needed\n    needsSecondaryHeader() {\n      if (!this.currentMatrix) return false;\n      return this.currentMatrix.x_category === 'Visualization types' || \n             this.currentMatrix.y_category === 'Visualization types' ||\n             this.currentMatrix.x_category === 'Theoretical underpinnings' || \n             this.currentMatrix.y_category === 'Theoretical underpinnings';\n    },\n    \n    // Check if secondary header is displayed on X-axis\n    isSecondaryHeaderOnXAxis() {\n      if (!this.currentMatrix) return false;\n      return this.currentMatrix.y_category === 'Visualization types' || \n             this.currentMatrix.y_category === 'Theoretical underpinnings';\n    },\n    \n    // Get secondary header data\n    secondaryHeaderData() {\n      if (!this.needsSecondaryHeader || !this.currentMatrix) {\n        console.log('Secondary header not needed or no matrix');\n        return null;\n      }\n      \n      // Check if X-axis or Y-axis needs secondary header\n      const isXAxis = this.currentMatrix.y_category === 'Visualization types' || this.currentMatrix.y_category === 'Theoretical underpinnings';\n      const category = isXAxis ? this.currentMatrix.y_category : this.currentMatrix.x_category;\n      \n      console.log('Category for secondary header:', category);\n      console.log('Is X axis:', isXAxis);\n      \n      const columnGroups = this.manualColumnGroups[category];\n      if (!columnGroups) {\n        console.log('No column groups found for category:', category);\n        return null;\n      }\n      \n      // Select corresponding data based on axis\n      // If Y-axis is the category that needs secondary header, then secondary header displays on X-axis (columns), need to group columns\n      // If X-axis is the category that needs secondary header, then secondary header displays on Y-axis (rows), need to group rows\n      const items = isXAxis ? this.currentMatrix.columns : this.currentMatrix.index;\n      const totalItems = items.length;\n      \n      console.log('X-axis category:', this.currentMatrix.x_category);\n      console.log('Y-axis category:', this.currentMatrix.y_category);\n      console.log('Axis needing secondary header:', isXAxis ? 'X-axis (Columns)' : 'Y-axis (Rows)');\n      console.log('X-axis column count:', this.currentMatrix.columns.length);\n      console.log('Y-axis row count:', this.currentMatrix.index.length);\n      console.log('Total items:', totalItems);\n      console.log('Column groups:', columnGroups);\n      console.log('isSecondaryHeaderOnXAxis:', this.isSecondaryHeaderOnXAxis);\n      \n      const headerGroups = [];\n      \n      // Generate groups based on manually marked column ranges\n      for (const [groupName, range] of Object.entries(columnGroups)) {\n        let { start, end } = range;\n        \n        console.log(`Processing group ${groupName}: start=${start}, end=${end}`);\n        \n        // Automatically adjust range to fit actual column count\n        if (start >= totalItems) {\n          console.log(`Group ${groupName} start index ${start} exceeds total items ${totalItems}, skipping`);\n          continue;\n        }\n        \n        // If end index exceeds range, adjust to last valid index\n        if (end >= totalItems) {\n          end = totalItems - 1;\n          console.log(`Adjusted end index for group ${groupName} to ${end}`);\n        }\n        \n        // Check if range is valid\n        if (start >= 0 && end < totalItems && start <= end) {\n          const span = end - start + 1;\n          const groupItems = items.slice(start, end + 1);\n          \n          console.log(`Valid group ${groupName}: span=${span}, items=`, groupItems);\n          \n          headerGroups.push({\n            name: groupName,\n            items: groupItems,\n            span: span,\n            start: start,\n            end: end\n          });\n        } else {\n          console.log(`Invalid range for group ${groupName}: start=${start}, end=${end}, totalItems=${totalItems}`);\n        }\n      }\n      \n      // Sort by starting position\n      headerGroups.sort((a, b) => a.start - b.start);\n      \n      console.log('Final header groups:', headerGroups);\n      \n      return headerGroups;\n    },\n    \n    matrixStats() {\n      if (!this.currentMatrix) return { total: 0, max: 0, min: 0, average: 0 };\n      \n      const allValues = this.currentMatrix.data.flat();\n      const total = allValues.reduce((sum, val) => sum + val, 0);\n      const max = Math.max(...allValues);\n      const min = Math.min(...allValues);\n      const average = total / allValues.length;\n      \n      return { total, max, min, average };\n    },\n    \n    \n    legendItems() {\n      if (!this.showHeatmap || !this.currentMatrix) return [];\n      \n      const { min, max } = this.matrixStats;\n      const range = max - min;\n      const steps = 5;\n      \n      return Array.from({ length: steps }, (_, i) => {\n        const value = min + (range * i) / (steps - 1);\n        const intensity = i / (steps - 1);\n        return {\n          color: this.getHeatmapColor(value, min, max),\n          label: value.toFixed(1)\n        };\n      });\n    }\n  },\n  \n  async mounted() {\n    await this.loadMatrixData();\n  },\n  \n  methods: {\n    async loadMatrixData() {\n      try {\n        this.loading = true;\n        const response = await fetch('/src/assets/data/all_matrices.json');\n        this.availableMatrices = await response.json();\n      } catch (error) {\n        console.error('Failed to load matrix data:', error);\n        try {\n          const matricesData = require('@/assets/data/all_matrices.json');\n          this.availableMatrices = matricesData;\n        } catch (localError) {\n          console.error('Failed to load local matrix data:', localError);\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    onXCategoryChange() {\n      this.currentMatrix = null;\n    },\n    \n    onYCategoryChange() {\n      this.currentMatrix = null;\n    },\n    \n    generateMatrix() {\n      if (!this.canGenerateMatrix) return;\n      \n      this.loading = true;\n      \n      // Simulate async processing\n      setTimeout(() => {\n        // First try forward matching (X-axis vs Y-axis)\n        let matrix = this.findMatrix(this.selectedXCategory, this.selectedYCategory);\n        \n        if (matrix) {\n          this.currentMatrix = matrix;\n        } else {\n          // If not found, try reverse matching (Y-axis vs X-axis)\n          const reverseMatrix = this.findMatrix(this.selectedYCategory, this.selectedXCategory);\n          if (reverseMatrix) {\n            // Transpose matrix to match user-selected X/Y axis\n            this.currentMatrix = this.transposeMatrix(reverseMatrix);\n          } else {\n            alert(`No correlation matrix data found between \"${this.selectedXCategory}\" and \"${this.selectedYCategory}\"`);\n          }\n        }\n        this.loading = false;\n      }, 500);\n    },\n    \n    findMatrix(xCategory, yCategory) {\n      return this.availableMatrices.find(matrix => \n        matrix.x_category === xCategory && matrix.y_category === yCategory\n      );\n    },\n    \n    transposeMatrix(matrix) {\n      // Transpose matrix (swap rows and columns)\n      const transposed = {\n        x_category: matrix.y_category,\n        y_category: matrix.x_category,\n        columns: [...matrix.index],\n        index: [...matrix.columns],\n        data: []\n      };\n      \n      // Transpose data\n      for (let j = 0; j < matrix.data[0].length; j++) {\n        const newRow = [];\n        for (let i = 0; i < matrix.data.length; i++) {\n          newRow.push(matrix.data[i][j]);\n        }\n        transposed.data.push(newRow);\n      }\n      \n      return transposed;\n    },\n    \n    getCellStyle(value) {\n      const style = {};\n      \n      if (this.showHeatmap && this.currentMatrix) {\n        const { min, max } = this.matrixStats;\n        style.backgroundColor = this.getHeatmapColor(value, min, max);\n        style.color = this.getTextColor(value, min, max);\n      } else {\n        style.backgroundColor = 'white';\n        style.color = '#333';\n      }\n      \n      return style;\n    },\n    \n    getHeatmapColor(value, min, max) {\n      if (max === min) return 'rgb(255, 255, 255)';\n      \n      const intensity = (value - min) / (max - min);\n      \n      // Use white to green (#00C3B5) gradient\n      if (value === 0) {\n        return 'white';\n      } else {\n        // From white (255,255,255) to green (0,195,181)\n        const r = Math.round(255 - intensity * (255-109));\n        const g = Math.round(255 - intensity * (255 - 174));\n        const b = Math.round(255 - intensity * (255 - 194));\n        return `rgb(${r}, ${g}, ${b})`;\n      }\n    },\n    \n    \n    getTextColor(value, min, max) {\n      if (max === min) return '#333';\n      \n      const intensity = (value - min) / (max - min);\n      \n      if (value === 0) {\n        return '#666';\n      } else if (intensity > 0.6) {\n        return 'white';\n      } else {\n        return '#333';\n      }\n    },\n    \n    truncateText(text, maxLength) {\n      if (text.length <= maxLength) return text;\n      return text.substring(0, maxLength) + '...';\n    },\n    \n    // Calculate row sum\n    getRowSum(rowIndex) {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data[rowIndex].reduce((sum, val) => sum + val, 0);\n    },\n    \n    // Calculate column sum\n    getColumnSum(colIndex) {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data.reduce((sum, row) => sum + row[colIndex], 0);\n    },\n    \n    // Calculate total sum\n    getTotalSum() {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data.reduce((rowSum, row) => \n        rowSum + row.reduce((cellSum, val) => cellSum + val, 0), 0\n      );\n    },\n    \n    // Sum cell style\n    getSumCellStyle(value, type) {\n      const style = {\n        backgroundColor: 'white',\n        color: '#333'\n      };\n      \n      return style;\n    },\n    \n    // Get row's secondary group\n    getRowGroup(rowIndex) {\n      if (!this.needsSecondaryHeader || !this.secondaryHeaderData || this.isSecondaryHeaderOnXAxis) {\n        return null;\n      }\n      \n      // Find which group the row index belongs to\n      for (const group of this.secondaryHeaderData) {\n        if (rowIndex >= group.start && rowIndex <= group.end) {\n          return group;\n        }\n      }\n      return null;\n    },\n    \n    // Check if it's the start of a new group\n    isNewGroupStart(rowIndex) {\n      if (!this.needsSecondaryHeader || !this.secondaryHeaderData || this.isSecondaryHeaderOnXAxis) {\n        return false;\n      }\n      \n      // Check if it's the first row of a group\n      for (const group of this.secondaryHeaderData) {\n        if (rowIndex === group.start) {\n          return true;\n        }\n      }\n      return false;\n    },\n    \n    \n\n  }\n}\n</script>\n\n<style scoped>\n.correlation-matrix-container {\n  padding: 20px;\n  max-width: 100%;\n  background-color: #f8f9fa;\n  min-height: calc(100vh - 72px);\n}\n\n.header-section {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.header-section h1 {\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.header-section p {\n  color: #666;\n  font-size: 1.1rem;\n}\n\n.controls-section {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.matrix-selector h3 {\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.selector-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.selector-item label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: #333;\n}\n\n.category-select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n}\n\n.validation-section {\n  text-align: center;\n  margin-top: 15px;\n}\n\n.generate-section {\n  text-align: center;\n}\n\n.warning {\n  color: #dc3545;\n  font-weight: 500;\n  padding: 10px;\n  background-color: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n\n.generate-btn {\n  padding: 12px 24px;\n  background-color: #8456A1;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  transition: background-color 0.3s;\n}\n\n.generate-btn:hover:not(:disabled) {\n  background-color: #0056b3;\n}\n\n.generate-btn:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n\n.matrix-display {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.matrix-info {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.matrix-info h3 {\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.matrix-info p {\n  color: #666;\n  font-size: 14px;\n}\n\n.matrix-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.display-options {\n  display: flex;\n  gap: 20px;\n}\n\n.display-options label {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  cursor: pointer;\n}\n\n.zoom-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.zoom-controls input[type=\"range\"] {\n  width: 100px;\n}\n\n.zoom-controls label {\n  font-weight: 500;\n  color: #333;\n}\n\n\n\n.matrix-wrapper {\n  overflow: auto;\n  max-height: 70vh;\n  border: 1px solid #333;\n  margin-bottom: 20px;\n  background-color: white;\n  position: relative;\n}\n\n.matrix-zoom-container {\n  --zoom-factor: 1;\n  display: inline-block;\n  min-width: 100%;\n}\n\n.matrix-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  font-size: 12px;\n  background-color: white;\n  min-width: 600px;\n}\n\n.corner-cell {\n  background-color: white;\n  border-top: none;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  width: calc(150px * var(--zoom-factor));\n  min-width: calc(150px * var(--zoom-factor));\n  padding: calc(8px * var(--zoom-factor));\n  /* font-weight: bold; */\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 20;\n}\n\n.col-header {\n  background-color: #f8f9fa;\n  border-top: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-left: none;\n  padding: calc(4px * var(--zoom-factor)) calc(2px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: center;\n  vertical-align: middle;\n  min-width: calc(10px * var(--zoom-factor));\n  max-width: calc(30px * var(--zoom-factor));\n  position: sticky;\n  top: 0;\n  z-index: 10;\n}\n\n/* Secondary header styles */\n.secondary-header {\n  background-color: #e9ecef;\n  border-top: none;\n  border-right: 1px solid #333;\n  border-bottom: none;\n  border-left: none;\n  padding: calc(6px * var(--zoom-factor)) calc(4px * var(--zoom-factor));\n  /* font-weight: bold; */\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  position: sticky;\n  top: 0;\n  z-index: 15;\n}\n\n.secondary-corner {\n  background-color: white;\n  border-top: none;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: none;\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 25;\n}\n\n/* Row grouping header styles */\n.row-group-header {\n  background-color: #e9ecef;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: none;\n  padding: calc(6px * var(--zoom-factor)) calc(4px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  writing-mode: vertical-rl;\n  text-orientation: mixed;\n  min-width: calc(30px * var(--zoom-factor));\n  position: sticky;\n  left: 0;\n  z-index: 15;\n}\n\n.header-text {\n  writing-mode: vertical-rl;\n  text-orientation: mixed;\n  height: auto;\n  min-height: calc(60px * var(--zoom-factor));\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 1.2;\n  padding: calc(5px * var(--zoom-factor)) calc(2px * var(--zoom-factor));\n  word-break: break-all;\n  white-space: normal;\n}\n\n.row-header {\n  background-color: #f8f9fa;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-top: none;\n  padding: calc(8px * var(--zoom-factor)) calc(12px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: left;\n  vertical-align: middle;\n  min-width: calc(150px * var(--zoom-factor));\n  max-width: calc(200px * var(--zoom-factor));\n  position: sticky;\n  left: 0;\n  z-index: 5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.matrix-cell {\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-top: none;\n  border-left: none;\n  padding: calc(6px * var(--zoom-factor));\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  font-weight: normal;\n  width: calc(25px * var(--zoom-factor));\n  height: calc(30px * var(--zoom-factor));\n  transition: background-color 0.2s ease;\n  cursor: pointer;\n  position: relative;\n}\n\n.matrix-cell:hover {\n  background-color: #e9ecef !important;\n  font-weight: bold;\n}\n\n/* Sum row and column styles */\n  .sum-cell {\n    background-color: white !important;\n    color: #333 !important;\n    border-right: none;\n    border-bottom: none;\n    border-top: none;\n    border-left: none;\n    padding: calc(6px * var(--zoom-factor));\n    text-align: center;\n    vertical-align: middle;\n    font-size: calc(11px * var(--zoom-factor));\n    width: calc(25px * var(--zoom-factor));\n    height: calc(30px * var(--zoom-factor));\n  }\n\n.sum-row {\n  background-color: white;\n}\n\n.row-sum {\n  background-color: white !important;\n  color: #333 !important;\n}\n\n.col-sum {\n  background-color: white !important;\n  color: #333 !important;\n}\n\n.total-sum {\n  background-color: white !important;\n  color: #333 !important;\n  font-weight: 900;\n  border: 3px solid #333;\n}\n\n.sum-cell:hover {\n  background-color: #f8f9fa !important;\n}\n\n.legend {\n  margin-bottom: 20px;\n}\n\n.legend h4 {\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.legend-scale {\n  display: flex;\n  gap: 15px;\n  align-items: center;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.legend-color {\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n}\n\n.statistics {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-radius: 4px;\n}\n\n.statistics h4 {\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n}\n\n.stat-item {\n  display: flex;\n  justify-content: space-between;\n}\n\n.stat-item label {\n  font-weight: 500;\n  color: #555;\n}\n\n.stat-item span {\n  font-weight: bold;\n  color: #333;\n}\n\n.no-data,\n.loading {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-size: 1.1rem;\n}\n\n@media (max-width: 768px) {\n  .correlation-matrix-container {\n    padding: 10px;\n  }\n  \n  .selector-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .matrix-controls {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n  \n  .display-options {\n    justify-content: center;\n  }\n  \n  .stats-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .legend-scale {\n    flex-wrap: wrap;\n  }\n  \n  .matrix-table {\n    font-size: 10px;\n  }\n  \n  .corner-cell,\n  .row-header {\n    min-width: 120px;\n    padding: 6px 8px;\n  }\n  \n  .col-header {\n    min-width: 50px;\n    padding: 6px 3px;\n  }\n  \n  .header-text {\n    min-height: 80px;\n    padding: 3px 1px;\n  }\n  \n  .matrix-cell {\n    width: 35px;\n    height: 30px;\n    padding: 4px;\n    font-size: 9px;\n  }\n  \n  .sum-cell {\n    width: 35px;\n    height: 30px;\n    padding: 4px;\n    font-size: 9px;\n  }\n}\n</style>\n","import { render } from \"./CorrelationMatrixView.vue?vue&type=template&id=e795c0e2&scoped=true\"\nimport script from \"./CorrelationMatrixView.vue?vue&type=script&lang=js\"\nexport * from \"./CorrelationMatrixView.vue?vue&type=script&lang=js\"\n\nimport \"./CorrelationMatrixView.vue?vue&type=style&index=0&id=e795c0e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e795c0e2\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","$event","$data","selectedXCategory","onChange","args","$options","onXCategoryChange","value","_Fragment","_renderList","categories","category","_hoisted_6","_hoisted_7","selectedYCategory","onYCategoryChange","_hoisted_8","_hoisted_9","_hoisted_10","canGenerateMatrix","_hoisted_11","onClick","generateMatrix","disabled","loading","_hoisted_12","_createCommentVNode","currentMatrix","_hoisted_13","_hoisted_14","_hoisted_15","type","showHeatmap","_createTextVNode","showValues","_hoisted_16","zoomLevel","min","max","step","_toDisplayString","Math","round","_hoisted_17","_normalizeStyle","_hoisted_18","needsSecondaryHeader","secondaryHeaderData","isSecondaryHeaderOnXAxis","_hoisted_19","group","name","colspan","span","title","_hoisted_20","rowspan","_hoisted_21","_hoisted_22","columns","col","_hoisted_24","_hoisted_23","index","row","rowIndex","isNewGroupStart","getRowGroup","_hoisted_25","truncateText","_hoisted_26","colIndex","_normalizeClass","getCellStyle","data","_hoisted_28","_hoisted_27","getSumCellStyle","getRowSum","_hoisted_30","_hoisted_29","_hoisted_31","_hoisted_32","getColumnSum","_hoisted_34","_hoisted_33","_hoisted_35","_hoisted_36","legendItems","item","backgroundColor","color","label","_hoisted_37","_hoisted_38","_hoisted_39","matrixStats","total","_hoisted_40","_hoisted_41","_hoisted_42","average","toFixed","_hoisted_43","_hoisted_44","availableMatrices","manualColumnGroups","start","end","computed","this","x_category","y_category","console","log","isXAxis","columnGroups","items","totalItems","length","headerGroups","groupName","range","Object","entries","groupItems","slice","push","sort","a","b","allValues","flat","reduce","sum","val","steps","Array","from","_","i","getHeatmapColor","mounted","loadMatrixData","methods","response","fetch","json","error","matricesData","require","localError","setTimeout","matrix","findMatrix","reverseMatrix","transposeMatrix","alert","xCategory","yCategory","find","transposed","j","newRow","getTextColor","intensity","r","g","text","maxLength","substring","getTotalSum","rowSum","cellSum","__exports__","render"],"sourceRoot":""}