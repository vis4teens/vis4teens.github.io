{"version":3,"file":"js/472.95d91529.js","mappings":"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","sources":["webpack://octopusmap/./src/views/CorrelationMatrixView.vue","webpack://octopusmap/./src/views/CorrelationMatrixView.vue?dec3"],"sourcesContent":["<template>\n  <div class=\"correlation-matrix-container\">\n    <div class=\"header-section\">\n      <h1>Correlation Matrix</h1>\n    </div>\n\n    <div class=\"controls-section\">\n      <div class=\"matrix-selector\">\n        <h3>Select Matrix Data</h3>\n        <div class=\"selector-grid\">\n          <div class=\"selector-item\">\n            <label>X-axis Category (Rows):</label>\n            <select v-model=\"selectedXCategory\" @change=\"onXCategoryChange\" class=\"category-select\">\n              <option value=\"\">Please select...</option>\n              <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\n                {{ category }}\n              </option>\n            </select>\n          </div>\n          \n          <div class=\"selector-item\">\n            <label>Y-axis Category (Columns):</label>\n            <select v-model=\"selectedYCategory\" @change=\"onYCategoryChange\" class=\"category-select\">\n              <option value=\"\">Please select...</option>\n              <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\n                {{ category }}\n              </option>\n            </select>\n          </div>\n        </div>\n        \n        <div class=\"validation-section\" v-if=\"selectedXCategory && selectedYCategory\">\n          <div v-if=\"selectedXCategory === selectedYCategory\" class=\"warning\">\n            ⚠️ Please select two different categories\n          </div>\n          <div v-else-if=\"canGenerateMatrix\" class=\"generate-section\">\n            <button @click=\"generateMatrix\" class=\"generate-btn\" :disabled=\"loading\">\n              {{ loading ? 'Generating...' : 'Generate Correlation Matrix' }}\n            </button>\n          </div>\n        </div>\n        \n        \n      </div>\n    </div>\n\n    <div class=\"matrix-display\" v-if=\"currentMatrix\">\n      <div class=\"matrix-info\">\n        <h3>{{ currentMatrix.x_category }} vs {{ currentMatrix.y_category }}</h3>\n        <p>Matrix Size: {{ currentMatrix.index.length }} × {{ currentMatrix.columns.length }}</p>\n        <p v-if=\"needsSecondaryHeader\">Secondary Header Required: Yes</p>\n        <p v-if=\"needsSecondaryHeader\">Secondary Header Position: {{ isSecondaryHeaderOnXAxis ? 'X-axis (Columns)' : 'Y-axis (Rows)' }}</p>\n        <p v-if=\"secondaryHeaderData\">Secondary Header Data: {{ secondaryHeaderData.length }} groups</p>\n        <p v-else-if=\"needsSecondaryHeader\">Secondary Header Data: None</p>\n        <div v-if=\"secondaryHeaderData\" style=\"font-size: 12px; color: #666;\">\n          <p>Group Details:</p>\n          <ul>\n            <li v-for=\"group in secondaryHeaderData\" :key=\"group.name\">\n              {{ group.name }}: {{ isSecondaryHeaderOnXAxis ? 'Columns' : 'Rows' }} {{ group.start }}-{{ group.end }} ({{ group.span }} {{ isSecondaryHeaderOnXAxis ? 'columns' : 'rows' }})\n            </li>\n          </ul>\n          <p>Debug Info: isSecondaryHeaderOnXAxis = {{ isSecondaryHeaderOnXAxis }}</p>\n        </div>\n      </div>\n\n      <div class=\"matrix-controls\">\n        <div class=\"display-options\">\n          <label>\n            <input type=\"checkbox\" v-model=\"showHeatmap\" />\n            Heatmap Display\n          </label>\n          <label>\n            <input type=\"checkbox\" v-model=\"showValues\" />\n            Show Values\n          </label>\n        </div>\n        \n        <div class=\"zoom-controls\">\n          <label>Zoom Level:</label>\n          <input type=\"range\" v-model=\"zoomLevel\" min=\"0.5\" max=\"2.0\" step=\"0.1\" />\n          <span>{{ Math.round(zoomLevel * 100) }}%</span>\n        </div>\n      </div>\n\n      <div class=\"matrix-wrapper\">\n        <div class=\"matrix-zoom-container\" :style=\"{ \n          '--zoom-factor': zoomLevel,\n          fontSize: (12 * zoomLevel) + 'px'\n        }\">\n                     <table class=\"matrix-table\">\n           <thead>\n             <!-- Secondary header row (only when needed on X-axis) -->\n             <tr v-if=\"needsSecondaryHeader && secondaryHeaderData && isSecondaryHeaderOnXAxis\">\n               <th class=\"corner-cell secondary-corner\"></th>\n               <th \n                 v-for=\"group in secondaryHeaderData\" \n                 :key=\"group.name\"\n                 class=\"secondary-header\"\n                 :colspan=\"group.span\"\n                 :title=\"group.name\"\n               >\n                 {{ group.name }}\n               </th>\n               <th class=\"sum-header secondary-corner\"> </th>\n             </tr>\n             <!-- Main header row -->\n             <tr>\n               <th class=\"corner-cell\" :rowspan=\"needsSecondaryHeader && isSecondaryHeaderOnXAxis ? 2 : 1\"></th>\n               <!-- When secondary header is displayed on Y-axis, add an empty column to correspond to row grouping column -->\n               <th \n                 v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis\"\n                 class=\"col-header\"\n                 style=\"background-color: #e9ecef;\"\n               >\n               </th>\n               <th \n                 v-for=\"col in currentMatrix.columns\" \n                 :key=\"col\"\n                 class=\"col-header\"\n                 :title=\"col\"\n               >\n                 <div class=\"header-text\">{{ col }}</div>\n               </th>\n               <th class=\"sum-header\"> </th>\n             </tr>\n           </thead>\n          <tbody>\n            <tr \n              v-for=\"(row, rowIndex) in currentMatrix.index\" \n              :key=\"row\"\n              class=\"matrix-row\"\n            >\n              <!-- When secondary header is displayed on Y-axis, add grouping information before row title -->\n              <th \n                v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis && isNewGroupStart(rowIndex)\"\n                class=\"row-group-header\"\n                :rowspan=\"getRowGroup(rowIndex).span\"\n                :title=\"getRowGroup(rowIndex).name\"\n              >\n                {{ getRowGroup(rowIndex).name }}\n              </th>\n              <th class=\"row-header\" :title=\"row\">\n                {{ truncateText(row, 25) }}\n              </th>\n              <td \n                v-for=\"(col, colIndex) in currentMatrix.columns\"\n                :key=\"col\"\n                class=\"matrix-cell\"\n                :class=\"{ 'with-heatmap': showHeatmap }\"\n                :style=\"getCellStyle(currentMatrix.data[rowIndex][colIndex])\"\n                :title=\"`${row} - ${col}: ${currentMatrix.data[rowIndex][colIndex]}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ currentMatrix.data[rowIndex][colIndex] }}\n                </span>\n              </td>\n              <td \n                class=\"sum-cell row-sum\"\n                :style=\"getSumCellStyle(getRowSum(rowIndex), 'row')\"\n                :title=\"`${row} - Row Sum: ${getRowSum(rowIndex)}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ getRowSum(rowIndex) }}\n                </span>\n              </td>\n            </tr>\n            <!-- Column sum row -->\n            <tr class=\"sum-row\">\n              <th class=\"sum-header\"> </th>\n              <!-- When secondary header is displayed on Y-axis, add an empty column to correspond to row grouping column -->\n              <td \n                v-if=\"needsSecondaryHeader && !isSecondaryHeaderOnXAxis\"\n                class=\"sum-cell\"\n                style=\"background-color: #e9ecef;\"\n              >\n              </td>\n              <td \n                v-for=\"(col, colIndex) in currentMatrix.columns\"\n                :key=\"col\"\n                class=\"sum-cell col-sum\"\n                :style=\"getSumCellStyle(getColumnSum(colIndex), 'column')\"\n                :title=\"`${col} - Column Sum: ${getColumnSum(colIndex)}`\"\n              >\n                <span v-if=\"showValues\">\n                  {{ getColumnSum(colIndex) }}\n                </span>\n              </td>\n              <td>\n              </td>\n            </tr>\n          </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Legend -->\n      <div class=\"legend\" v-if=\"showHeatmap\">\n        <h4>Legend</h4>\n        <div class=\"legend-scale\">\n          <div class=\"legend-item\" v-for=\"(item, index) in legendItems\" :key=\"index\">\n            <div class=\"legend-color\" :style=\"{ backgroundColor: item.color }\"></div>\n            <span>{{ item.label }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Statistics -->\n      <div class=\"statistics\">\n        <h4>Statistics</h4>\n        <div class=\"stats-grid\">\n          <div class=\"stat-item\">\n            <label>Total:</label>\n            <span>{{ matrixStats.total }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Maximum:</label>\n            <span>{{ matrixStats.max }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Minimum:</label>\n            <span>{{ matrixStats.min }}</span>\n          </div>\n          <div class=\"stat-item\">\n            <label>Average:</label>\n            <span>{{ matrixStats.average.toFixed(2) }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"no-data\" v-else-if=\"!loading\">\n      <p>Please select two categories to generate correlation matrix</p>\n    </div>\n\n    <div class=\"loading\" v-if=\"loading\">\n      <p>Generating matrix...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CorrelationMatrixView',\n  data() {\n    return {\n      availableMatrices: [],\n      selectedXCategory: '',\n      selectedYCategory: '',\n      currentMatrix: null,\n      loading: false,\n      showHeatmap: true,\n      showValues: true,\n      zoomLevel: 1.0,\n      // Manual column grouping - specify column range merging\n      manualColumnGroups: {\n        // Example: column grouping when X-axis is Visualization types\n        'Visualization types': {\n          'statistical chart': { start: 0, end: 8 },      // Columns 1-9\n          'scientific visualization': { start: 9, end: 12 }, // Columns 10-13\n          'diagram': { start: 13, end: 17 },              // Columns 14-18\n          'map': { start: 18, end: 21 },                  // Columns 19-22\n          'network/graph': { start: 22, end: 22 }         // Column 23\n        },\n        // Example: column grouping when X-axis is Theoretical underpinnings\n        'Theoretical underpinnings': {\n          'learning theory': { start: 0, end: 47 },       // Columns 1-48\n          'cognitive theory': { start: 48, end: 56 },     // Columns 49-57\n          'design theory': { start: 57, end: 62 }         // Columns 58-63\n        }\n      },\n      // Fixed category options\n      categories: [\n        'Research areas',\n        'Subjects', \n        'Country',\n        'Education goals',\n        'Visualization forms',\n        'Tool types',\n        'Teaching environment',\n        'Teaching mode',\n        'Non-lecturing activities',\n        'Collaboration',\n        'Evaluation metrics',\n        'Other tested variables',\n        'Visualization types',\n        'Theoretical underpinnings'\n      ]\n    }\n  },\n  \n    computed: {\n    canGenerateMatrix() {\n      return this.selectedXCategory && this.selectedYCategory && this.selectedXCategory !== this.selectedYCategory;\n    },\n    \n    // Check if secondary header is needed\n    needsSecondaryHeader() {\n      if (!this.currentMatrix) return false;\n      return this.currentMatrix.x_category === 'Visualization types' || \n             this.currentMatrix.y_category === 'Visualization types' ||\n             this.currentMatrix.x_category === 'Theoretical underpinnings' || \n             this.currentMatrix.y_category === 'Theoretical underpinnings';\n    },\n    \n    // Check if secondary header is displayed on X-axis\n    isSecondaryHeaderOnXAxis() {\n      if (!this.currentMatrix) return false;\n      return this.currentMatrix.y_category === 'Visualization types' || \n             this.currentMatrix.y_category === 'Theoretical underpinnings';\n    },\n    \n    // Get secondary header data\n    secondaryHeaderData() {\n      if (!this.needsSecondaryHeader || !this.currentMatrix) {\n        console.log('Secondary header not needed or no matrix');\n        return null;\n      }\n      \n      // Check if X-axis or Y-axis needs secondary header\n      const isXAxis = this.currentMatrix.y_category === 'Visualization types' || this.currentMatrix.y_category === 'Theoretical underpinnings';\n      const category = isXAxis ? this.currentMatrix.y_category : this.currentMatrix.x_category;\n      \n      console.log('Category for secondary header:', category);\n      console.log('Is X axis:', isXAxis);\n      \n      const columnGroups = this.manualColumnGroups[category];\n      if (!columnGroups) {\n        console.log('No column groups found for category:', category);\n        return null;\n      }\n      \n      // Select corresponding data based on axis\n      // If Y-axis is the category that needs secondary header, then secondary header displays on X-axis (columns), need to group columns\n      // If X-axis is the category that needs secondary header, then secondary header displays on Y-axis (rows), need to group rows\n      const items = isXAxis ? this.currentMatrix.columns : this.currentMatrix.index;\n      const totalItems = items.length;\n      \n      console.log('X-axis category:', this.currentMatrix.x_category);\n      console.log('Y-axis category:', this.currentMatrix.y_category);\n      console.log('Axis needing secondary header:', isXAxis ? 'X-axis (Columns)' : 'Y-axis (Rows)');\n      console.log('X-axis column count:', this.currentMatrix.columns.length);\n      console.log('Y-axis row count:', this.currentMatrix.index.length);\n      console.log('Total items:', totalItems);\n      console.log('Column groups:', columnGroups);\n      console.log('isSecondaryHeaderOnXAxis:', this.isSecondaryHeaderOnXAxis);\n      \n      const headerGroups = [];\n      \n      // Generate groups based on manually marked column ranges\n      for (const [groupName, range] of Object.entries(columnGroups)) {\n        let { start, end } = range;\n        \n        console.log(`Processing group ${groupName}: start=${start}, end=${end}`);\n        \n        // Automatically adjust range to fit actual column count\n        if (start >= totalItems) {\n          console.log(`Group ${groupName} start index ${start} exceeds total items ${totalItems}, skipping`);\n          continue;\n        }\n        \n        // If end index exceeds range, adjust to last valid index\n        if (end >= totalItems) {\n          end = totalItems - 1;\n          console.log(`Adjusted end index for group ${groupName} to ${end}`);\n        }\n        \n        // Check if range is valid\n        if (start >= 0 && end < totalItems && start <= end) {\n          const span = end - start + 1;\n          const groupItems = items.slice(start, end + 1);\n          \n          console.log(`Valid group ${groupName}: span=${span}, items=`, groupItems);\n          \n          headerGroups.push({\n            name: groupName,\n            items: groupItems,\n            span: span,\n            start: start,\n            end: end\n          });\n        } else {\n          console.log(`Invalid range for group ${groupName}: start=${start}, end=${end}, totalItems=${totalItems}`);\n        }\n      }\n      \n      // Sort by starting position\n      headerGroups.sort((a, b) => a.start - b.start);\n      \n      console.log('Final header groups:', headerGroups);\n      \n      return headerGroups;\n    },\n    \n    matrixStats() {\n      if (!this.currentMatrix) return { total: 0, max: 0, min: 0, average: 0 };\n      \n      const allValues = this.currentMatrix.data.flat();\n      const total = allValues.reduce((sum, val) => sum + val, 0);\n      const max = Math.max(...allValues);\n      const min = Math.min(...allValues);\n      const average = total / allValues.length;\n      \n      return { total, max, min, average };\n    },\n    \n    \n    legendItems() {\n      if (!this.showHeatmap || !this.currentMatrix) return [];\n      \n      const { min, max } = this.matrixStats;\n      const range = max - min;\n      const steps = 5;\n      \n      return Array.from({ length: steps }, (_, i) => {\n        const value = min + (range * i) / (steps - 1);\n        const intensity = i / (steps - 1);\n        return {\n          color: this.getHeatmapColor(value, min, max),\n          label: value.toFixed(1)\n        };\n      });\n    }\n  },\n  \n  async mounted() {\n    await this.loadMatrixData();\n  },\n  \n  methods: {\n    async loadMatrixData() {\n      try {\n        this.loading = true;\n        const response = await fetch('/src/assets/data/all_matrices.json');\n        this.availableMatrices = await response.json();\n      } catch (error) {\n        console.error('Failed to load matrix data:', error);\n        try {\n          const matricesData = require('@/assets/data/all_matrices.json');\n          this.availableMatrices = matricesData;\n        } catch (localError) {\n          console.error('Failed to load local matrix data:', localError);\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    onXCategoryChange() {\n      this.currentMatrix = null;\n    },\n    \n    onYCategoryChange() {\n      this.currentMatrix = null;\n    },\n    \n    generateMatrix() {\n      if (!this.canGenerateMatrix) return;\n      \n      this.loading = true;\n      \n      // Simulate async processing\n      setTimeout(() => {\n        // First try forward matching (X-axis vs Y-axis)\n        let matrix = this.findMatrix(this.selectedXCategory, this.selectedYCategory);\n        \n        if (matrix) {\n          this.currentMatrix = matrix;\n        } else {\n          // If not found, try reverse matching (Y-axis vs X-axis)\n          const reverseMatrix = this.findMatrix(this.selectedYCategory, this.selectedXCategory);\n          if (reverseMatrix) {\n            // Transpose matrix to match user-selected X/Y axis\n            this.currentMatrix = this.transposeMatrix(reverseMatrix);\n          } else {\n            alert(`No correlation matrix data found between \"${this.selectedXCategory}\" and \"${this.selectedYCategory}\"`);\n          }\n        }\n        this.loading = false;\n      }, 500);\n    },\n    \n    findMatrix(xCategory, yCategory) {\n      return this.availableMatrices.find(matrix => \n        matrix.x_category === xCategory && matrix.y_category === yCategory\n      );\n    },\n    \n    transposeMatrix(matrix) {\n      // Transpose matrix (swap rows and columns)\n      const transposed = {\n        x_category: matrix.y_category,\n        y_category: matrix.x_category,\n        columns: [...matrix.index],\n        index: [...matrix.columns],\n        data: []\n      };\n      \n      // Transpose data\n      for (let j = 0; j < matrix.data[0].length; j++) {\n        const newRow = [];\n        for (let i = 0; i < matrix.data.length; i++) {\n          newRow.push(matrix.data[i][j]);\n        }\n        transposed.data.push(newRow);\n      }\n      \n      return transposed;\n    },\n    \n    getCellStyle(value) {\n      const style = {};\n      \n      if (this.showHeatmap && this.currentMatrix) {\n        const { min, max } = this.matrixStats;\n        style.backgroundColor = this.getHeatmapColor(value, min, max);\n        style.color = this.getTextColor(value, min, max);\n      } else {\n        style.backgroundColor = 'white';\n        style.color = '#333';\n      }\n      \n      return style;\n    },\n    \n    getHeatmapColor(value, min, max) {\n      if (max === min) return 'rgb(255, 255, 255)';\n      \n      const intensity = (value - min) / (max - min);\n      \n      // Use white to green (#00C3B5) gradient\n      if (value === 0) {\n        return 'white';\n      } else {\n        // From white (255,255,255) to green (0,195,181)\n        const r = Math.round(255 - intensity * 255);\n        const g = Math.round(255 - intensity * (255 - 195));\n        const b = Math.round(255 - intensity * (255 - 181));\n        return `rgb(${r}, ${g}, ${b})`;\n      }\n    },\n    \n    \n    getTextColor(value, min, max) {\n      if (max === min) return '#333';\n      \n      const intensity = (value - min) / (max - min);\n      \n      if (value === 0) {\n        return '#666';\n      } else if (intensity > 0.6) {\n        return 'white';\n      } else {\n        return '#333';\n      }\n    },\n    \n    truncateText(text, maxLength) {\n      if (text.length <= maxLength) return text;\n      return text.substring(0, maxLength) + '...';\n    },\n    \n    // Calculate row sum\n    getRowSum(rowIndex) {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data[rowIndex].reduce((sum, val) => sum + val, 0);\n    },\n    \n    // Calculate column sum\n    getColumnSum(colIndex) {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data.reduce((sum, row) => sum + row[colIndex], 0);\n    },\n    \n    // Calculate total sum\n    getTotalSum() {\n      if (!this.currentMatrix) return 0;\n      return this.currentMatrix.data.reduce((rowSum, row) => \n        rowSum + row.reduce((cellSum, val) => cellSum + val, 0), 0\n      );\n    },\n    \n    // Sum cell style\n    getSumCellStyle(value, type) {\n      const style = {\n        backgroundColor: 'white',\n        color: '#333'\n      };\n      \n      return style;\n    },\n    \n    // Get row's secondary group\n    getRowGroup(rowIndex) {\n      if (!this.needsSecondaryHeader || !this.secondaryHeaderData || this.isSecondaryHeaderOnXAxis) {\n        return null;\n      }\n      \n      // Find which group the row index belongs to\n      for (const group of this.secondaryHeaderData) {\n        if (rowIndex >= group.start && rowIndex <= group.end) {\n          return group;\n        }\n      }\n      return null;\n    },\n    \n    // Check if it's the start of a new group\n    isNewGroupStart(rowIndex) {\n      if (!this.needsSecondaryHeader || !this.secondaryHeaderData || this.isSecondaryHeaderOnXAxis) {\n        return false;\n      }\n      \n      // Check if it's the first row of a group\n      for (const group of this.secondaryHeaderData) {\n        if (rowIndex === group.start) {\n          return true;\n        }\n      }\n      return false;\n    },\n    \n    \n\n  }\n}\n</script>\n\n<style scoped>\n.correlation-matrix-container {\n  padding: 20px;\n  max-width: 100%;\n  background-color: #f8f9fa;\n  min-height: calc(100vh - 72px);\n}\n\n.header-section {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.header-section h1 {\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.header-section p {\n  color: #666;\n  font-size: 1.1rem;\n}\n\n.controls-section {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.matrix-selector h3 {\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.selector-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.selector-item label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: #333;\n}\n\n.category-select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n}\n\n.validation-section {\n  text-align: center;\n  margin-top: 15px;\n}\n\n.generate-section {\n  text-align: center;\n}\n\n.warning {\n  color: #dc3545;\n  font-weight: 500;\n  padding: 10px;\n  background-color: #f8d7da;\n  border: 1px solid #f5c6cb;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n\n.generate-btn {\n  padding: 12px 24px;\n  background-color: #8456A1;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  transition: background-color 0.3s;\n}\n\n.generate-btn:hover:not(:disabled) {\n  background-color: #0056b3;\n}\n\n.generate-btn:disabled {\n  background-color: #6c757d;\n  cursor: not-allowed;\n}\n\n.matrix-display {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.matrix-info {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.matrix-info h3 {\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.matrix-info p {\n  color: #666;\n  font-size: 14px;\n}\n\n.matrix-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.display-options {\n  display: flex;\n  gap: 20px;\n}\n\n.display-options label {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  cursor: pointer;\n}\n\n.zoom-controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.zoom-controls input[type=\"range\"] {\n  width: 100px;\n}\n\n.zoom-controls label {\n  font-weight: 500;\n  color: #333;\n}\n\n\n\n.matrix-wrapper {\n  overflow: auto;\n  max-height: 70vh;\n  border: 1px solid #333;\n  margin-bottom: 20px;\n  background-color: white;\n  position: relative;\n}\n\n.matrix-zoom-container {\n  --zoom-factor: 1;\n  display: inline-block;\n  min-width: 100%;\n}\n\n.matrix-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  font-size: 12px;\n  background-color: white;\n  min-width: 600px;\n}\n\n.corner-cell {\n  background-color: white;\n  border-top: none;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  width: calc(150px * var(--zoom-factor));\n  min-width: calc(150px * var(--zoom-factor));\n  padding: calc(8px * var(--zoom-factor));\n  /* font-weight: bold; */\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 20;\n}\n\n.col-header {\n  background-color: #f8f9fa;\n  border-top: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-left: none;\n  padding: calc(4px * var(--zoom-factor)) calc(2px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: center;\n  vertical-align: middle;\n  min-width: calc(10px * var(--zoom-factor));\n  max-width: calc(30px * var(--zoom-factor));\n  position: sticky;\n  top: 0;\n  z-index: 10;\n}\n\n/* Secondary header styles */\n.secondary-header {\n  background-color: #e9ecef;\n  border-top: none;\n  border-right: 1px solid #333;\n  border-bottom: none;\n  border-left: none;\n  padding: calc(6px * var(--zoom-factor)) calc(4px * var(--zoom-factor));\n  /* font-weight: bold; */\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  position: sticky;\n  top: 0;\n  z-index: 15;\n}\n\n.secondary-corner {\n  background-color: white;\n  border-top: none;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: none;\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 25;\n}\n\n/* Row grouping header styles */\n.row-group-header {\n  background-color: #e9ecef;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: none;\n  padding: calc(6px * var(--zoom-factor)) calc(4px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  writing-mode: vertical-rl;\n  text-orientation: mixed;\n  min-width: calc(30px * var(--zoom-factor));\n  position: sticky;\n  left: 0;\n  z-index: 15;\n}\n\n.header-text {\n  writing-mode: vertical-rl;\n  text-orientation: mixed;\n  height: auto;\n  min-height: calc(60px * var(--zoom-factor));\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 1.2;\n  padding: calc(5px * var(--zoom-factor)) calc(2px * var(--zoom-factor));\n  word-break: break-all;\n  white-space: normal;\n}\n\n.row-header {\n  background-color: #f8f9fa;\n  border-left: none;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-top: none;\n  padding: calc(8px * var(--zoom-factor)) calc(12px * var(--zoom-factor));\n  font-weight: bold;\n  text-align: left;\n  vertical-align: middle;\n  min-width: calc(150px * var(--zoom-factor));\n  max-width: calc(200px * var(--zoom-factor));\n  position: sticky;\n  left: 0;\n  z-index: 5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.matrix-cell {\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  border-top: none;\n  border-left: none;\n  padding: calc(6px * var(--zoom-factor));\n  text-align: center;\n  vertical-align: middle;\n  font-size: calc(11px * var(--zoom-factor));\n  font-weight: normal;\n  width: calc(25px * var(--zoom-factor));\n  height: calc(30px * var(--zoom-factor));\n  transition: background-color 0.2s ease;\n  cursor: pointer;\n  position: relative;\n}\n\n.matrix-cell:hover {\n  background-color: #e9ecef !important;\n  font-weight: bold;\n}\n\n/* Sum row and column styles */\n  .sum-cell {\n    background-color: white !important;\n    color: #333 !important;\n    border-right: none;\n    border-bottom: none;\n    border-top: none;\n    border-left: none;\n    padding: calc(6px * var(--zoom-factor));\n    text-align: center;\n    vertical-align: middle;\n    font-size: calc(11px * var(--zoom-factor));\n    width: calc(25px * var(--zoom-factor));\n    height: calc(30px * var(--zoom-factor));\n  }\n\n.sum-row {\n  background-color: white;\n}\n\n.row-sum {\n  background-color: white !important;\n  color: #333 !important;\n}\n\n.col-sum {\n  background-color: white !important;\n  color: #333 !important;\n}\n\n.total-sum {\n  background-color: white !important;\n  color: #333 !important;\n  font-weight: 900;\n  border: 3px solid #333;\n}\n\n.sum-cell:hover {\n  background-color: #f8f9fa !important;\n}\n\n.legend {\n  margin-bottom: 20px;\n}\n\n.legend h4 {\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.legend-scale {\n  display: flex;\n  gap: 15px;\n  align-items: center;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.legend-color {\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n}\n\n.statistics {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-radius: 4px;\n}\n\n.statistics h4 {\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n}\n\n.stat-item {\n  display: flex;\n  justify-content: space-between;\n}\n\n.stat-item label {\n  font-weight: 500;\n  color: #555;\n}\n\n.stat-item span {\n  font-weight: bold;\n  color: #333;\n}\n\n.no-data,\n.loading {\n  text-align: center;\n  padding: 40px;\n  color: #666;\n  font-size: 1.1rem;\n}\n\n@media (max-width: 768px) {\n  .correlation-matrix-container {\n    padding: 10px;\n  }\n  \n  .selector-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .matrix-controls {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n  \n  .display-options {\n    justify-content: center;\n  }\n  \n  .stats-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .legend-scale {\n    flex-wrap: wrap;\n  }\n  \n  .matrix-table {\n    font-size: 10px;\n  }\n  \n  .corner-cell,\n  .row-header {\n    min-width: 120px;\n    padding: 6px 8px;\n  }\n  \n  .col-header {\n    min-width: 50px;\n    padding: 6px 3px;\n  }\n  \n  .header-text {\n    min-height: 80px;\n    padding: 3px 1px;\n  }\n  \n  .matrix-cell {\n    width: 35px;\n    height: 30px;\n    padding: 4px;\n    font-size: 9px;\n  }\n  \n  .sum-cell {\n    width: 35px;\n    height: 30px;\n    padding: 4px;\n    font-size: 9px;\n  }\n}\n</style>\n","import { render } from \"./CorrelationMatrixView.vue?vue&type=template&id=4387cdf8&scoped=true\"\nimport script from \"./CorrelationMatrixView.vue?vue&type=script&lang=js\"\nexport * from \"./CorrelationMatrixView.vue?vue&type=script&lang=js\"\n\nimport \"./CorrelationMatrixView.vue?vue&type=style&index=0&id=4387cdf8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4387cdf8\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","$event","$data","selectedXCategory","onChange","args","$options","onXCategoryChange","value","_Fragment","_renderList","categories","category","_hoisted_6","_hoisted_7","selectedYCategory","onYCategoryChange","_hoisted_8","_hoisted_9","_hoisted_10","canGenerateMatrix","_hoisted_11","onClick","generateMatrix","disabled","loading","_hoisted_12","_createCommentVNode","currentMatrix","_hoisted_13","_hoisted_14","_toDisplayString","x_category","y_category","index","length","columns","needsSecondaryHeader","_hoisted_15","_hoisted_16","isSecondaryHeaderOnXAxis","secondaryHeaderData","_hoisted_17","_hoisted_18","_hoisted_19","group","name","start","end","span","_hoisted_20","_hoisted_21","type","showHeatmap","_createTextVNode","showValues","_hoisted_22","zoomLevel","min","max","step","Math","round","_hoisted_23","_normalizeStyle","_hoisted_24","_hoisted_25","colspan","title","_hoisted_26","rowspan","_hoisted_27","_hoisted_28","col","_hoisted_30","_hoisted_29","row","rowIndex","isNewGroupStart","getRowGroup","_hoisted_31","truncateText","_hoisted_32","colIndex","_normalizeClass","getCellStyle","data","_hoisted_34","_hoisted_33","getSumCellStyle","getRowSum","_hoisted_36","_hoisted_35","_hoisted_37","_hoisted_38","getColumnSum","_hoisted_40","_hoisted_39","_hoisted_41","_hoisted_42","legendItems","item","backgroundColor","color","label","_hoisted_43","_hoisted_44","_hoisted_45","matrixStats","total","_hoisted_46","_hoisted_47","_hoisted_48","average","toFixed","_hoisted_49","_hoisted_50","availableMatrices","manualColumnGroups","computed","this","console","log","isXAxis","columnGroups","items","totalItems","headerGroups","groupName","range","Object","entries","groupItems","slice","push","sort","a","b","allValues","flat","reduce","sum","val","steps","Array","from","_","i","getHeatmapColor","mounted","loadMatrixData","methods","response","fetch","json","error","matricesData","require","localError","setTimeout","matrix","findMatrix","reverseMatrix","transposeMatrix","alert","xCategory","yCategory","find","transposed","j","newRow","getTextColor","intensity","r","g","text","maxLength","substring","getTotalSum","rowSum","cellSum","__exports__","render"],"sourceRoot":""}